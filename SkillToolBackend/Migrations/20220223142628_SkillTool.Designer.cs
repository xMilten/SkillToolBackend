// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillToolBackend.Data;

#nullable disable

namespace SkillToolBackend.Migrations
{
    [DbContext(typeof(SkillToolDbContext))]
    [Migration("20220223142628_SkillTool")]
    partial class SkillTool
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Rolf",
                            LastName = "Augustin",
                            Location = "Bremen"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Mario",
                            LastName = "Theuner",
                            Location = "Bielefeld"
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Timo",
                            LastName = "Heil",
                            Location = "Cottbus"
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Lilly",
                            LastName = "Steinkamp",
                            Location = "Berlin"
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Irmgard",
                            LastName = "Seifried",
                            Location = "Bremen"
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Ilja",
                            LastName = "Lohmann",
                            Location = "Berlin"
                        });
                });

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId", "SkillId");

                    b.ToTable("EmployeeSkills");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            SkillId = 1,
                            Rating = 8
                        },
                        new
                        {
                            EmployeeId = 1,
                            SkillId = 2,
                            Rating = 7
                        },
                        new
                        {
                            EmployeeId = 2,
                            SkillId = 5,
                            Rating = 8
                        },
                        new
                        {
                            EmployeeId = 3,
                            SkillId = 4,
                            Rating = 9
                        },
                        new
                        {
                            EmployeeId = 3,
                            SkillId = 6,
                            Rating = 5
                        },
                        new
                        {
                            EmployeeId = 4,
                            SkillId = 5,
                            Rating = 9
                        },
                        new
                        {
                            EmployeeId = 5,
                            SkillId = 3,
                            Rating = 7
                        },
                        new
                        {
                            EmployeeId = 5,
                            SkillId = 5,
                            Rating = 8
                        },
                        new
                        {
                            EmployeeId = 6,
                            SkillId = 6,
                            Rating = 10
                        },
                        new
                        {
                            EmployeeId = 6,
                            SkillId = 4,
                            Rating = 6
                        });
                });

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            Name = "C"
                        },
                        new
                        {
                            SkillId = 2,
                            Name = "C++"
                        },
                        new
                        {
                            SkillId = 3,
                            Name = "C#"
                        },
                        new
                        {
                            SkillId = 4,
                            Name = "PHP"
                        },
                        new
                        {
                            SkillId = 5,
                            Name = "Java"
                        },
                        new
                        {
                            SkillId = 6,
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.EmployeeSkill", b =>
                {
                    b.HasOne("SkillToolBackend.Models.SkillTool.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillToolBackend.Models.SkillTool.Skill", "Skill")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.Employee", b =>
                {
                    b.Navigation("EmployeeSkills");
                });

            modelBuilder.Entity("SkillToolBackend.Models.SkillTool.Skill", b =>
                {
                    b.Navigation("EmployeeSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
